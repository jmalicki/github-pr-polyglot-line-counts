// Proposed enhancement for handling null totals and 300 file limit
// Apply this when rate limit resets

// In analyzeViaAPI(), after fetching all files:

const allFiles = apiResult.files;
console.log(`[PR Lang Stats] Total files from API: ${allFiles.length}`);

// Check for 300 file limit (GitHub API maximum)
if (allFiles.length === 300) {
  console.warn('[PR Lang Stats] Hit 300 file API limit - PR may have more files');
  // Show warning in UI (implement showWarning() similar to showError())
}

this.languageStats.clear();

// Calculate stats from API data
for (const file of allFiles) {
  const language = this.detectLanguageFromFilename(file.filename);
  
  // File might not have additions/deletions if diff failed
  const stats = {
    added: file.additions || 0,
    removed: file.deletions || 0
  };
  
  if (!this.languageStats.has(language)) {
    this.languageStats.set(language, { added: 0, removed: 0, files: 0 });
  }
  
  const langStats = this.languageStats.get(language);
  langStats.added += stats.added;
  langStats.removed += stats.removed;
  langStats.files += 1;
}

// Add method to show warnings (non-blocking, unlike errors)
showWarning(message) {
  const panel = document.getElementById('pr-language-stats-panel');
  if (!panel) return;
  
  // Add warning banner to top of existing content
  const warningBanner = document.createElement('div');
  warningBanner.className = 'flash flash-warn mb-2';
  warningBanner.innerHTML = `<strong>⚠️ Note:</strong> ${message}`;
  
  panel.insertBefore(warningBanner, panel.firstChild.nextSibling);
}

